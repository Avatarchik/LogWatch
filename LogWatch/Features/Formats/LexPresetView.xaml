<mui:ModernWindow
    x:Class="LogWatch.Features.Formats.LexPresetView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonedit="clr-namespace:ICSharpCode.AvalonEdit;assembly=ICSharpCode.AvalonEdit"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:editing="clr-namespace:ICSharpCode.AvalonEdit.Editing;assembly=ICSharpCode.AvalonEdit"
    xmlns:feature="clr-namespace:LogWatch.Features.Formats"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mui="http://firstfloorsoftware.com/ModernUI"
    xmlns:util="clr-namespace:LogWatch.Util"
    x:Name="Root"
    Title="Lex Preset"
    Width="900"
    Height="620"
    Background="{DynamicResource WindowBackground}"
    Icon="..\..\App.ico"
    Style="{StaticResource CompactWindow}"
    mc:Ignorable="d">

    <mui:ModernWindow.LogoData>
        <util:TextGeometry
            Brush="White"
            FontFamily="Consolas"
            FontSize="22"
            FontWeight="Bold"
            Text="lw" />
    </mui:ModernWindow.LogoData>

    <mui:ModernWindow.Resources>
        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{DynamicResource WindowText}" />
        </Style>

        <Style x:Key="{x:Type avalonedit:TextEditor}" TargetType="{x:Type avalonedit:TextEditor}">
            <Setter Property="Foreground" Value="{DynamicResource InputText}" />
            <Setter Property="Background" Value="{DynamicResource InputBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource InputBorder}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="2,1,1,1" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type avalonedit:TextEditor}">
                        <Border
                            x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">

                            <ScrollViewer
                                x:Name="PART_ScrollViewer"
                                HorizontalContentAlignment="Left"
                                VerticalContentAlignment="Top"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CanContentScroll="True"
                                Content="{Binding TextArea, RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False"
                                HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                Padding="{TemplateBinding Padding}"
                                RenderOptions.ClearTypeHint="Enabled"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="WordWrap" Value="True">
                                <Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Accent}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsReadOnly" Value="False" />
                                    <Condition Property="IsEnabled" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type editing:TextArea}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="SelectionBrush" Value="{DynamicResource Accent}" />
            <Setter Property="SelectionForeground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type editing:TextArea}">
                        <DockPanel Focusable="False">
                            <ItemsControl
                                DockPanel.Dock="Left"
                                Focusable="False"
                                ItemsSource="{Binding LeftMargins, RelativeSource={RelativeSource TemplatedParent}}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                            <ContentPresenter
                                Panel.ZIndex="-1"
                                Content="{Binding TextView, RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="False" />
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </mui:ModernWindow.Resources>

    <mui:ModernWindow.DataContext>
        <feature:LexPresetViewModel />
    </mui:ModernWindow.DataContext>

    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250*" />
            <ColumnDefinition Width="200*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="300*" />
            <RowDefinition Height="200*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Label
            Margin="0,3,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Content="Name:"
            Padding="0" />

        <TextBox
            MinWidth="200"
            Margin="42,0,0,0"
            HorizontalAlignment="Left"
            Text="{Binding Name}" />

        <Grid
            Grid.Row="1"
            Grid.RowSpan="2"
            Margin="0,10,10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="115*" />
                <RowDefinition Height="193*" />
                <RowDefinition Height="201*" />
            </Grid.RowDefinitions>
            <Label
                Width="52"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Content="Common:"
                Padding="0" />
            <avalonedit:TextEditor
                Margin="0,21,0,0"
                Document="{Binding CommonCode}"
                FontFamily="Consolas"
                Foreground="White"
                HorizontalScrollBarVisibility="Auto"
                SyntaxHighlighting="Lex"
                VerticalScrollBarVisibility="Auto" />
            <Label
                Grid.Row="1"
                Width="50"
                Margin="0,10,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Content="Segment:"
                Padding="0" />
            <avalonedit:TextEditor
                x:Name="SegmentCodeEditor"
                Grid.Row="1"
                Margin="0,31,0,0"
                Document="{Binding SegmentCode}"
                FontFamily="Consolas"
                Foreground="White"
                HorizontalScrollBarVisibility="Auto"
                SyntaxHighlighting="Lex"
                VerticalScrollBarVisibility="Auto" />
            <Label
                Grid.Row="2"
                Margin="0,10,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Content="Record:"
                Padding="0" />
            <avalonedit:TextEditor
                x:Name="RecordCodeEditor"
                Grid.Row="2"
                Margin="0,31,0,0"
                Document="{Binding RecordCode}"
                FontFamily="Consolas"
                Foreground="White"
                HorizontalScrollBarVisibility="Auto"
                SyntaxHighlighting="Lex"
                VerticalScrollBarVisibility="Auto" />
            <GridSplitter
                Grid.Row="1"
                Height="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Background="Transparent" />
            <GridSplitter
                Grid.Row="2"
                Height="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Background="Transparent" />
        </Grid>
        <GridSplitter
            Grid.RowSpan="3"
            Width="5"
            HorizontalAlignment="Right"
            Background="Transparent" />
        <Label
            Grid.Row="1"
            Grid.Column="1"
            Width="46"
            Margin="0,10,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Content="Log text:"
            Padding="0" />
        <TextBox
            Grid.Row="1"
            Grid.Column="1"
            MinHeight="45"
            Margin="0,31,0,0"
            AcceptsReturn="True"
            FontFamily="Consolas"
            HorizontalScrollBarVisibility="Auto"
            IsReadOnly="True"
            Text="{Binding LogText}"
            VerticalScrollBarVisibility="Auto" />
        <Label
            Grid.Row="2"
            Grid.Column="1"
            Width="40"
            Margin="0,10,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Content="Output:"
            Padding="0" />
        <TextBox
            Grid.Row="2"
            Grid.Column="1"
            Margin="0,31,0,0"
            AcceptsReturn="True"
            FontFamily="Consolas"
            Foreground="{DynamicResource InputText}"
            HorizontalScrollBarVisibility="Auto"
            IsReadOnly="True"
            Text="{Binding Output}"
            VerticalScrollBarVisibility="Auto" />

        <StackPanel
            Grid.Row="3"
            Grid.ColumnSpan="2"
            Margin="0,8,0,0"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                Margin="4,0,0,0"
                Command="{Binding RunCommand}"
                Content="compile &amp; run" />
            <Button
                Margin="4,0,0,0"
                Command="{Binding SaveAndCloseCommand}"
                Content="save &amp; close"
                IsDefault="True" />
            <Button
                Margin="4,0,0,0"
                CommandParameter="{x:Static MessageBoxResult.Cancel}"
                Content="close"
                IsCancel="True" />
        </StackPanel>

    </Grid>
</mui:ModernWindow>
